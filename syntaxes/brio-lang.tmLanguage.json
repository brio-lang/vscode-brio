{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Brio",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings-single"
		},
		{
			"include": "#strings-double"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#builtin-types"
		},
		{
			"include": "#builtin-function-calls"
		},
		{
			"include": "#errors_warnings_exceptions"
		},
		{
			"include": "#comments-multiline"
		},
		{
			"include": "#comments-inline"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.brio-lang",
				"match": "@|\\b(if|while|for|return|new|class|method|let|or|and|else|elseif|while|for|public|private|protected|try|catch|raise|as|import|from|skip|super|none|each)\\b"
			},
			{
				"match": "(<<|>>)",
				"name": "keyword.operator.bitwise.brio-lang"
			},
			{
				"match": "((&|\\||<<)=)",
				"name": "keyword.operator.assignment.bitwise.brio-lang"
			},
			{
				"match": "(!=|<=|>=|<>|<|>|==)",
				"name": "keyword.operator.comparison.brio-lang"
			},
			{
				"match": "([+*/%-]=)",
				"name": "keyword.operator.assignment.arithmetic.brio-lang"
			},
			{
				"match": "(=)",
				"name": "keyword.operator.assignment.brio-lang"
			}]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b([0-9]+)"
				}
			]
		},
		"strings-single": {
			"name": "string.quoted.single.brio-lang",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.brio-lang",
					"match": "\\\\."
				}
			]
		},
		"strings-double": {
			"name": "string.quoted.double.brio-lang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.brio-lang",
					"match": "\\\\."
				}
			]
		},
		"builtin-function-calls": {
			"match": "(print|size|open|close|range|traceback|input|exit|boolean|string|integer|decimal|arg|httpGet|httpPost)",
			"name": "support.function.builtin.call.brio-lang"
		},
		"builtin-types": {
			"match": "(Integer|Decimal|String|Boolean|Array|Dictionary|None|File|Socket)",
			"name": "support.type.brio-lang"
		},
		"errors_warnings_exceptions": {
			"match": "(BaseException|ClassException|Exception|LexerError|ParserError|RecognitionException|MismatchedTokenException|SyntaxError|ArithmeticError|BufferError|IOError|LookupError|AttributeError|EOFError|ImportError|ModuleNotFoundError|IndexError|KeyError|KeyboardInterrupt|MemoryError|NameError|NotImplementedError|OSError|OverflowError|RecursionError|RuntimeError|SystemError|TypeError|ValueError|ZeroDivisionError|FileExistsError|FileNotFoundError|TimeoutError)",
			"name": "support.type.exception.brio-lang"
		},
		"comments-multiline": {
			"patterns": [
				{
					"begin": "###",
					"end": "###",
					"name": "comment.block.brio-lang"
				}
			]
		},
		"comments-inline": {
			"patterns": [
				{
					"begin": "#",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.brio-lang"
						}
					},
					"end": "\n",
					"name": "comment.line.brio-lang"
				}
			]
		}
	},
	"scopeName": "source.brio-lang"
}
